{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\goals-app\\\\src\\\\pages\\\\ItemsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ListItem from '../components/ListItem';\nimport EditModal from '../components/EditModal';\nimport { getStoredData, deleteItem, updateItem } from '../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c = PageContainer;\nconst ItemsPage = ({\n  itemType,\n  onBalanceChange\n}) => {\n  _s();\n  // Добавлено onBalanceChange как пропс\n  const [items, setItems] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    const storedItems = getStoredData(itemType);\n    setItems(storedItems);\n  }, [itemType]);\n  const handleItemClick = item => {\n    setSelectedItem({\n      ...item,\n      type: itemType\n    });\n    setIsModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setSelectedItem(null);\n  };\n  const handleItemUpdate = updatedItem => {\n    updateItem(itemType, updatedItem);\n    const updatedItems = items.map(item => item.id === updatedItem.id ? updatedItem : item);\n    setItems(updatedItems);\n    handleModalClose();\n  };\n  const handleItemDelete = itemId => {\n    deleteItem(itemType, itemId);\n    const updatedItems = items.filter(item => item.id !== itemId);\n    setItems(updatedItems);\n    handleModalClose();\n  };\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: itemType === 'tasks' ? 'Задания' : 'Награды'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n      item: item,\n      onClick: () => handleItemClick(item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), isModalOpen && selectedItem && /*#__PURE__*/_jsxDEV(EditModal, {\n      item: selectedItem,\n      onClose: handleModalClose,\n      onUpdate: handleItemUpdate,\n      onDelete: handleItemDelete,\n      onBalanceChange: onBalanceChange // Передаем onBalanceChange в EditModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemsPage, \"GMLrwgbS/i9X9fxs7vpv2OqPz3Q=\");\n_c2 = ItemsPage;\nexport default ItemsPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"ItemsPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","ListItem","EditModal","getStoredData","deleteItem","updateItem","jsxDEV","_jsxDEV","PageContainer","div","_c","ItemsPage","itemType","onBalanceChange","_s","items","setItems","selectedItem","setSelectedItem","isModalOpen","setIsModalOpen","storedItems","handleItemClick","item","type","handleModalClose","handleItemUpdate","updatedItem","updatedItems","map","id","handleItemDelete","itemId","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","onUpdate","onDelete","_c2","$RefreshReg$"],"sources":["C:/Users/user/Desktop/goals-app/src/pages/ItemsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport ListItem from '../components/ListItem';\r\nimport EditModal from '../components/EditModal';\r\nimport { getStoredData, deleteItem, updateItem } from '../utils/storage';\r\n\r\nconst PageContainer = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ItemsPage = ({ itemType, onBalanceChange }) => { // Добавлено onBalanceChange как пропс\r\n  const [items, setItems] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedItems = getStoredData(itemType);\r\n    setItems(storedItems);\r\n  }, [itemType]);\r\n\r\n  const handleItemClick = (item) => {\r\n    setSelectedItem({ ...item, type: itemType });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  const handleItemUpdate = (updatedItem) => {\r\n    updateItem(itemType, updatedItem);\r\n    const updatedItems = items.map(item =>\r\n      item.id === updatedItem.id ? updatedItem : item\r\n    );\r\n    setItems(updatedItems);\r\n    handleModalClose();\r\n  };\r\n\r\n  const handleItemDelete = (itemId) => {\r\n    deleteItem(itemType, itemId);\r\n    const updatedItems = items.filter(item => item.id !== itemId);\r\n    setItems(updatedItems);\r\n    handleModalClose();\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      <h2>{itemType === 'tasks' ? 'Задания' : 'Награды'}</h2>\r\n      {items.map((item) => (\r\n        <ListItem key={item.id} item={item} onClick={() => handleItemClick(item)} />\r\n      ))}\r\n      {isModalOpen && selectedItem && (\r\n        <EditModal\r\n          item={selectedItem}\r\n          onClose={handleModalClose}\r\n          onUpdate={handleItemUpdate}\r\n          onDelete={handleItemDelete}\r\n          onBalanceChange={onBalanceChange} // Передаем onBalanceChange в EditModal\r\n        />\r\n      )}\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ItemsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}